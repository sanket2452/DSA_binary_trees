/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void DFS(TreeNode* root, vector<int> &vis, int &ans){
        if(!root->left && !root->right){
            vis[root->val]++;
            int cnt=0;
            for(int i=1;i<vis.size();i++){
                if(vis[i]%2) cnt++;
            }
            if(cnt<=1) ans++;
            vis[root->val]--; 
            return;
        }
        vis[root->val]++;
        if(root->left) DFS(root->left, vis, ans);
        
        if(root->right) DFS(root->right, vis, ans);
        vis[root->val]--;

    }
    int pseudoPalindromicPaths (TreeNode* root) {
        if(root==NULL) return 0;
        if(!root->left && !root->right) return 1;
        int ans=0;
        vector<int> vis(10, 0);
        DFS(root, vis, ans);
        return ans;

    }
};
