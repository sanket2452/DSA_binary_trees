class Solution {
public:
    void leftSum(TreeNode* root, int &ans){
        if(root==NULL) return;
        if(root->left&&root->left->left==NULL&&root->left->right==NULL) ans+=root->left->val;
        leftSum(root->left, ans);
        leftSum(root->right, ans);

    }
    int sumOfLeftLeaves(TreeNode* root) {
        int ans=0;
        leftSum(root, ans);
        return ans;
    }
};
---------------------------------------------------------------------------------------------------
class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        if(!root) return 0;
        queue<TreeNode*> q;
        q.push(root);
        int sum = 0;
        while(!q.empty()){
            int size = q.size();
            for(int i = 0; i < size; ++i){
                TreeNode *node = q.front();
                q.pop();
                if(node->left && !node->left->right && !node->left->left){
                    sum += node->left->val;
                } 
                if(node->left) q.push(node->left);
                if(node->right) q.push(node->right);
            }
        }
        return sum;
    }
};
